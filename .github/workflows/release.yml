name: Package

on:
  release:
    types: [ created ]

jobs:
  cross-compile:
    strategy:
      matrix:
        os: [ linux, freebsd ]
        arch: [ 386, amd64, arm, arm64 ]
    name: Crosscompile - ${{matrix.os}}-${{matrix.arch}}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1

      - name: compile
        id: compile
        run: |
          ./compile.sh --target ${{matrix.os}} -a ${{matrix.arch}}
          FILE=$(find build -type f | head -1)
          echo "::set-output name=version::$(sed -n 's/.*PROGRAM_VERSION\s*=\s*//p' Makefile)"
          echo "::set-output name=filename::$FILE"
          echo "::set-output name=name::$(basename $FILE)"
          echo "::set-output name=mime::$(file -bi $FILE)"

      - name: Upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_name: ${{ steps.compile.outputs.name }}-${{steps.compile.outputs.version}}-${{matrix.os}}-${{matrix.arch}}
          asset_path: ${{ steps.compile.outputs.filename }}
          asset_content_type: ${{ steps.compile.outputs.mime }}

  package-ubuntu:
    strategy:
      matrix:
        os: [ ubuntu-18.04, ubuntu-20.04 ]
    name: Package - ${{matrix.os}}
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v1

      - name: Install build dependencies
        run: |
          sudo apt-get -y update
          sudo apt-get -y install build-essential fakeroot debhelper

      - name: Package
        id: package
        run: |
          make package_debian
          DEB_FILE=$(ls ../*.deb | head -1)
          echo "::set-output name=deb_filename::$DEB_FILE"
          echo "::set-output name=deb_name::$(basename $DEB_FILE)"
          CH_FILE=$(ls ../*.changes | head -1)
          echo "::set-output name=ch_filename::$CH_FILE"
          echo "::set-output name=ch_name::$(basename $CH_FILE)"
          INFO_FILE=$(ls ../*.buildinfo | head -1)
          echo "::set-output name=info_filename::$INFO_FILE"
          echo "::set-output name=info_name::$(basename $INFO_FILE)"

      - name: Upload (package)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_name: ${{ steps.package.outputs.deb_name }}
          asset_path: ${{ steps.package.outputs.deb_filename }}
          asset_content_type: application/x-deb

      - name: Upload (.changes)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_name: ${{ steps.package.outputs.ch_name }}
          asset_path: ${{ steps.package.outputs.ch_filename }}
          asset_content_type: text/plain

      - name: Upload (buildinfo)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_name: ${{ steps.package.outputs.info_name }}
          asset_path: ${{ steps.package.outputs.info_filename }}
          asset_content_type: text/plain

  package-freebsd:
    strategy:
      matrix:
        arch: [ 386, amd64, arm, arm64 ]
    name: Package - FreeBSD (${{matrix.arch}})
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1

      - name: Package
        id: package
        run: |
          GOARCH=${{matrix.arch}} make package_freebsd
          FILE=$(ls build/*.tar.gz | head -1)
          echo "::set-output name=filename::$FILE"
          echo "::set-output name=name::$(basename $FILE)"

      - name: Upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_name: ${{ steps.package.outputs.name }}
          asset_path: ${{ steps.package.outputs.filename }}
          asset_content_type: application/gzip
